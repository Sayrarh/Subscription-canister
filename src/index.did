type Subscription = record {
  id : text;
  expiryDate : int32;
  days : nat16;
  createdAt : nat64;
  updatedAt : opt nat64;
  price : float32;
  subscriber : principal;
};
type SubscriptionPayload = record { days : nat16; price : float32 };
type _AzleResult = variant { Ok : Subscription; Err : text };
type _AzleResult_1 = variant { Ok : vec Subscription; Err : text };
type _AzleResult_2 = variant { Ok : text; Err : text };
service : () -> {
  cancelSubscription : (text) -> (_AzleResult);
  createSubscription : (SubscriptionPayload) -> (_AzleResult);
  getAllSubscriptions : () -> (_AzleResult_1) query;
  getSubscriptionsBySubscriber : (principal) -> (_AzleResult_1) query;
  init : () -> (_AzleResult_2);
  renewSubscription : (text, float64) -> (_AzleResult);
  withdrawFunds : (text) -> (_AzleResult);
}